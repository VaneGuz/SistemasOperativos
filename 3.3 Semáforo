#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#include <semaphore.h>
#define NUMTHREADS 3

sem_t synch;

void *s1(void *arg);
void *s2(void *arg);
void *s3(void *arg);


int main(int argc, char const *argv[])
{
	int i;
	pthread_t tid[NUMTHREADS];

	sem_init(&synch,0,1);


	pthread_create(&tid[0],NULL,&s1,NULL);
	pthread_create(&tid[1],NULL,&s2,NULL);
	pthread_create(&tid[2],NULL,&s3,NULL);


	for ( i = 0; i < NUMTHREADS; i++)
	{
		pthread_join(tid[i],NULL);
	}

	//Destruir semÃ¡foro
	sem_destroy(&synch);
	printf("DONE!!! \n");

	return 0;
}

void *s1(void *arg){
	printf("S1 Executing .... \n");
	sem_post(&synch);
	return 0;
}

void *s2(void *arg){
	//printf("S2 Waiting .... \n", );
	sem_wait(&synch);
	printf("S2 Executing ...  \n" );
	sem_post(&synch);
	return 0;
}

void *s3(void *arg){
	sem_wait(&synch);
	printf("S3 Executing ... \n");
	return 0;
}
