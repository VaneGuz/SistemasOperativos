/* Para el uso de semáforos de debe de incluir la librería
	
		<semaphore.h>

	Crear una variable semáforo: 	sem_t nomSem
	Inicializar la variable: 	sem_init(&nomSem, 0,1 ) 
		el seg arg es si sincronizará hilos del mismo o diferente proceso
		el tercer arg es el val inicial del semaforo, si es 1 se trata como un mutex

	Destruir la variable:	sem_destroy (&nomSem)	

	sem_wait(&sem);
	sem_post(&sem);

*/

#include <semaphore.h>
#include <stdio.h>
#include <pthread.h>
#define NUMTHREADS 200
#define MAXCNT 1000

//Variables globales-Compartidas entre hilos
double counter=0;
sem_t sem;

void*counting(void *);

int main(int argc, char const *argv[])
{
	pthread_t tid[NUMTHREADS];
	int i=0;

	//Inicializar el semáforo
	sem_init(&sem,0,1);


	for (i = 0; i < NUMTHREADS; ++i)
	{
		pthread_create(&tid[i],NULL,&counting, NULL);
	}
	for ( i = 0; i < NUMTHREADS; ++i)
	{
		pthread_join(tid[i],NULL);
	}

	//Destruir semáforo
	sem_destroy(&sem);
	printf("Contador puede estar en %d\n",MAXCNT*NUMTHREADS );
	printf("Valor del contador es %.0f\n", counter);


	return 0;
}

void* counting(void *unused){
	int i=0;

	sem_wait(&sem);

	for (i = 0; i < MAXCNT; ++i)
	{
		counter++;
	}

	sem_post(&sem);

	return NULL;
}
